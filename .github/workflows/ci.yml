name: Hardhat CI & Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: HardHat

    env:
      HARDHAT_NETWORK: hardhat
      NODE_OPTIONS: --test-reporter=spec

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Detect lockfile so we can safely toggle caching
      - name: Detect lockfile
        id: lock
        run: |
          if [ -f "HardHat/package-lock.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "path=HardHat/package-lock.json" >> $GITHUB_OUTPUT
          elif [ -f "HardHat/npm-shrinkwrap.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "path=HardHat/npm-shrinkwrap.json" >> $GITHUB_OUTPUT
          elif [ -f "HardHat/pnpm-lock.yaml" ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "path=HardHat/pnpm-lock.yaml" >> $GITHUB_OUTPUT
          elif [ -f "HardHat/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "path=HardHat/yarn.lock" >> $GITHUB_OUTPUT
          else
            echo "manager=" >> $GITHUB_OUTPUT
            echo "path=" >> $GITHUB_OUTPUT
          fi
          echo "Detected manager='${{ steps.lock.outputs.manager }}' path='${{ steps.lock.outputs.path }}'"

      # Setup Node with cache (only if lockfile exists)
      - name: Setup Node.js (with cache)
        if: ${{ steps.lock.outputs.manager != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: ${{ steps.lock.outputs.manager }}
          cache-dependency-path: ${{ steps.lock.outputs.path }}

      # Fallback: Setup Node without cache (no lockfile committed)
      - name: Setup Node.js (no cache)
        if: ${{ steps.lock.outputs.manager == '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          if [ -f package.json ]; then
            npm ci --no-audit --no-fund || npm install --no-audit --no-fund
          else
            echo "package.json not found in HardHat/"; exit 1
          fi

      - name: Compile contracts
        run: npx hardhat compile

      # Optional: run legacy Hardhat/Mocha tests if you still have any
      - name: Run Hardhat (Mocha) tests (optional)
        run: |
          if ls test 1>/dev/null 2>&1 && grep -RIlq "" test 2>/dev/null; then
            npx hardhat test || true
          fi

      # Run your node:test suite (the Counter test you pasted)
      - name: Run node:test suite
        run: |
          if compgen -G "test/**/*.js" > /dev/null || compgen -G "test/**/*.mjs" > /dev/null || compgen -G "test/*.js" > /dev/null || compgen -G "test/*.mjs" > /dev/null; then
            node --test "test/**/*.mjs" "test/**/*.js" "test/*.mjs" "test/*.js"
          else
            echo "No node:test files found in ./test â€” skipping."
          fi

      # Deploy only on pushes to main
      - name: Deploy contracts
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          RPC_URL: ${{ secrets.RPC_URL }}
        run: |
          echo "Deploying with scripts/deploy2.ts to 'didlab'..."
          npx hardhat run scripts/deploy2.ts --network didlab

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: hardhat-artifacts
          path: |
            HardHat/artifacts
            HardHat/cache
